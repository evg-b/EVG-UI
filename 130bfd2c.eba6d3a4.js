(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{132:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return C})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return f})),n.d(t,"default",(function(){return h}));var a=n(3),o=n(7),i=n(0),l=n.n(i),s=n(147),c=n(154),r="import React, { useState, useRef } from 'react';\nimport { Cubes, Radio, Popup, IconButton, Button, List, ListItem, ListItemText, withStyles } from '@evg-b/evg-ui';\nimport { PlayArrow, Pause } from '@evg-b/evg-icons'\n\nconst styles = {\n    base: {\n        display: 'flex',\n        position: 'relative',\n        width: '800px',\n        height: '800px',\n        backgroundColor: '#3d3d3d',\n    },\n    panelSettings: {\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        bottom: 10,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        padding: 10,\n        backgroundColor: '#FFFFFF',\n        borderRadius: '15px',\n        '& > *': {\n            margin: '0 5px',\n        }\n    },\n    colorPanel: {\n        padding: 10,\n        backgroundColor: '#FFFFFF',\n        borderRadius: '15px',\n    },\n\n}\nconst CubesSettings = (props) => {\n    const { classes } = props\n    const Cubes_ref = useRef()\n    const Color_ref = useRef()\n    const Speed_ref = useRef()\n    const Size_ref = useRef()\n    const [play, setPlay] = useState(true)\n    const [colorActive, setColorActive] = useState(0)\n    const [speedActive, setSpeedActive] = useState(1)\n    const [sizeActive, setSizeActive] = useState(40)\n    const arrColor = ['', 'red700', 'primary']\n    const handlePlay = () => {\n        setPlay(prev => {\n            prev ? Cubes_ref.current.stop() : Cubes_ref.current.start()\n            return !prev\n        })\n    }\n    const handleRipple = () => {\n        Cubes_ref.current.ripple(150, 18)\n    }\n    const handleChangeColor = ({ target }) => {\n        setColorActive(+target.value)\n    }\n    const handleChangeSpeed = ({ currentTarget }) => {\n        setSpeedActive(+currentTarget.value)\n    }\n    const handleChangeSize = ({ currentTarget }) => {\n        setSizeActive(+currentTarget.value)\n    }\n    return (\n        <div className={classes.base}>\n            <Cubes color={arrColor[colorActive]} speed={speedActive} size={sizeActive} ref={Cubes_ref} />\n            <div className={classes.panelSettings}>\n                <IconButton onClick={handlePlay}>\n                    {play ? <Pause /> : <PlayArrow />}\n                </IconButton>\n                <Button onClick={handleRipple}>Ripple</Button>\n                <Button ref={Color_ref}>Color</Button>\n                <Popup target={Color_ref} shift={15} position='top' mode='click' className={classes.colorPanel}>\n                    <Radio value={0} checked={colorActive === 0} onClick={handleChangeColor} />\n                    <Radio value={1} checked={colorActive === 1} onClick={handleChangeColor} color={arrColor[1]} />\n                    <Radio value={2} checked={colorActive === 2} onClick={handleChangeColor} color={arrColor[2]} />\n                </Popup>\n                <Button ref={Speed_ref}>Speed</Button>\n                <Popup target={Speed_ref} shift={15} position='top' mode='click'>\n                    <List>\n                        <ListItem value={10} active={speedActive === 10} onClick={handleChangeSpeed}>\n                            <ListItemText>x 10</ListItemText>\n                        </ListItem>\n                        <ListItem value={5} active={speedActive === 5} onClick={handleChangeSpeed}>\n                            <ListItemText>x 5</ListItemText>\n                        </ListItem>\n                        <ListItem value={2} active={speedActive === 2} onClick={handleChangeSpeed}>\n                            <ListItemText>x 2</ListItemText>\n                        </ListItem>\n                        <ListItem value={1} active={speedActive === 1} onClick={handleChangeSpeed}>\n                            <ListItemText>x 1</ListItemText>\n                        </ListItem>\n                    </List>\n                </Popup>\n                <Button ref={Size_ref}>Size</Button>\n                <Popup target={Size_ref} shift={15} position='top' mode='click'>\n                    <List>\n                        <ListItem value={100} active={sizeActive === 100} onClick={handleChangeSize}>\n                            <ListItemText>100px</ListItemText>\n                        </ListItem>\n                        <ListItem value={80} active={sizeActive === 80} onClick={handleChangeSize}>\n                            <ListItemText>80px</ListItemText>\n                        </ListItem>\n                        <ListItem value={40} active={sizeActive === 40} onClick={handleChangeSize}>\n                            <ListItemText>40px</ListItemText>\n                        </ListItem>\n                        <ListItem value={20} active={sizeActive === 20} onClick={handleChangeSize}>\n                            <ListItemText>20px</ListItemText>\n                        </ListItem>\n                    </List>\n                </Popup>\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(CubesSettings)",u=n(146),p=n(160),d=Object(u.J)({base:{display:"flex",position:"relative",width:"800px",height:"800px",backgroundColor:"#3d3d3d"},panelSettings:{position:"absolute",display:"flex",justifyContent:"center",alignItems:"center",bottom:10,left:"50%",transform:"translateX(-50%)",padding:10,backgroundColor:"#FFFFFF",borderRadius:"15px","& > *":{margin:"0 5px"}},colorPanel:{padding:10,backgroundColor:"#FFFFFF",borderRadius:"15px"}})((function(e){var t=e.classes,n=Object(i.useRef)(),a=Object(i.useRef)(),o=Object(i.useRef)(),s=Object(i.useRef)(),c=Object(i.useState)(!0),r=c[0],d=c[1],m=Object(i.useState)(0),v=m[0],C=m[1],b=Object(i.useState)(1),f=b[0],g=b[1],h=Object(i.useState)(40),x=h[0],k=h[1],S=["","red700","primary"],I=function(e){var t=e.target;C(+t.value)},L=function(e){var t=e.currentTarget;g(+t.value)},E=function(e){var t=e.currentTarget;k(+t.value)};return l.a.createElement("div",{className:t.base},l.a.createElement(u.j,{color:S[v],speed:f,size:x,ref:n}),l.a.createElement("div",{className:t.panelSettings},l.a.createElement(u.l,{onClick:function(){d((function(e){return e?n.current.stop():n.current.start(),!e}))}},r?l.a.createElement(p.l,null):l.a.createElement(p.m,null)),l.a.createElement(u.e,{onClick:function(){n.current.ripple(150,18)}},"Ripple"),l.a.createElement(u.e,{ref:a},"Color"),l.a.createElement(u.v,{target:a,shift:15,position:"top",mode:"click",className:t.colorPanel},l.a.createElement(u.w,{value:0,checked:0===v,onClick:I}),l.a.createElement(u.w,{value:1,checked:1===v,onClick:I,color:S[1]}),l.a.createElement(u.w,{value:2,checked:2===v,onClick:I,color:S[2]})),l.a.createElement(u.e,{ref:o},"Speed"),l.a.createElement(u.v,{target:o,shift:15,position:"top",mode:"click"},l.a.createElement(u.o,null,l.a.createElement(u.p,{value:10,active:10===f,onClick:L},l.a.createElement(u.s,null,"x 10")),l.a.createElement(u.p,{value:5,active:5===f,onClick:L},l.a.createElement(u.s,null,"x 5")),l.a.createElement(u.p,{value:2,active:2===f,onClick:L},l.a.createElement(u.s,null,"x 2")),l.a.createElement(u.p,{value:1,active:1===f,onClick:L},l.a.createElement(u.s,null,"x 1")))),l.a.createElement(u.e,{ref:s},"Size"),l.a.createElement(u.v,{target:s,shift:15,position:"top",mode:"click"},l.a.createElement(u.o,null,l.a.createElement(u.p,{value:100,active:100===x,onClick:E},l.a.createElement(u.s,null,"100px")),l.a.createElement(u.p,{value:80,active:80===x,onClick:E},l.a.createElement(u.s,null,"80px")),l.a.createElement(u.p,{value:40,active:40===x,onClick:E},l.a.createElement(u.s,null,"40px")),l.a.createElement(u.p,{value:20,active:20===x,onClick:E},l.a.createElement(u.s,null,"20px"))))))})),m=function(){return l.a.createElement(c.a,{title:"Settings",demo:l.a.createElement(d,null),snippet:r})},v=n(148),C={id:"Cubes",title:"Cubes",sidebar_label:"Cubes"},b={unversionedId:"Components/Cubes",id:"Components/Cubes",isDocsHomePage:!1,title:"Cubes",description:"import {",source:"@site/docs/Components/Cubes.mdx",slug:"/Components/Cubes",permalink:"/evg-ui/docs/Components/Cubes",version:"current",sidebar_label:"Cubes",sidebar:"someSidebar",previous:{title:"Loader",permalink:"/evg-ui/docs/Components/Loader"},next:{title:"Modal",permalink:"/evg-ui/docs/Components/Modal"}},f=[{value:"Settings",id:"settings",children:[]},{value:"API",id:"api",children:[]}],g={toc:f};function h(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},g,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Cubes - \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0436\u0438\u0432\u043e\u0439 \u0444\u043e\u043d \u0438\u0437 \u043a\u0443\u0431\u043e\u0432. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u0441\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ",Object(s.b)("inlineCode",{parentName:"p"},"canvas")," 2d \u0431\u0435\u0437 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.\n\u0423\u0434\u0438\u0432\u043b\u044f\u0439\u0442\u0435 \u0441\u0432\u043e\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043a\u0440\u0430\u0441\u0438\u0432\u043e\u0439 \u0444\u043e\u043d\u043e\u0432\u043e\u0439 \u0430\u043d\u0438\u043c\u0430\u0446\u0438\u0435\u0439."),Object(s.b)("h6",null,"\u042d\u043a\u0441\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442"),Object(s.b)("h2",{id:"settings"},"Settings"),Object(s.b)(m,{mdxType:"CubesSettingsExample"}),Object(s.b)("h2",{id:"api"},"API"),Object(s.b)(v.a,{name:"Cubes",mdxType:"ApiDoc"}))}h.isMDXComponent=!0}}]);